#!groovy

library 'kentrikos-shared-library'
pipeline {
    options {
        timeout(time: 60, unit: 'MINUTES')
    }
    environment {
        ENV_K8S_DIR = 'env-eks'
        OPERTION_DIR = "application/$AWS_REGION/$ENV_K8S_DIR"
    }
    agent any
    stages {
        stage('Git clone') {
            steps {
                cleanWs()
                git credentialsId: 'bitbucket-key', url: '$CONFIG_REPO_URL'
            }
        }
        stage('Init') {
            steps {
                terraformInitApplication dir: "$OPERTION_DIR", subcomponent: "${ENV_K8S_DIR}", withAWS: true
            }
        }
        stage('Plan') {
            steps {
                terraformPlan dir: "$OPERTION_DIR", withAWS: true
            }
        }
        stage('Apply') {
            input {
                message "Should we continue?"
                ok "Yes, we should."
            }
            steps {
                terraformApply dir: "$OPERTION_DIR", withAWS: true
            }
        }
        stage('Retrieve kubeconfig') {
            steps {
                withProxyEnv() {
                    withAWS(role: "$CROSS_ACCOUNT_ROLE_NAME", roleAccount: "$AWS_APPLICATION_ACCOUNT_NUMBER") {
                        sh '''#!/bin/bash -x
                       aws eks update-kubeconfig --name ${AWS_REGION}-${PRODUCT_DOMAIN_NAME}-${ENVIRONMENT_TYPE} --region ${AWS_REGION}
                       '''
                    }
                }
            }
        }
    }
}
