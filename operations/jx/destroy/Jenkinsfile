#!groovy

import groovy.json.JsonOutput

library 'kentrikos-shared-library'
pipeline {
    environment {
        ENV_K8S_DIR = 'env-kops'
        OPERATION_DIR = "operations/$AWS_REGION/$ENV_K8S_DIR"
    }
    agent any
    stages {
        stage('Git clone') {
            steps {
                gitCloneConfigRepo()
            }
        }
        stage('Remove wildcard DNS record') {
            steps {
                dir("$OPERATION_DIR") {
                    withProxyEnv() {
                        script {
                            def parameters = readYaml file: 'jenkins/parameters.yaml'

                            println "Getting domain name"
                            def r53DomainName = sh(script: "aws route53 get-hosted-zone --id " + parameters.jxDomainHostedZoneID + " --output text --query 'HostedZone.Name'",
                                    returnStdout: true).trim().replaceAll("\\.\$", "")
                            r53WildcardRecordName = "*." + parameters.jxDomainAliasPrefix + "." + r53DomainName

                            println "Getting ingress NLB information"
                            ingressNLBAddress = sh(script: "kubectl get service -n kube-system jxing-nginx-ingress-controller -o json | jq -r '.status.loadBalancer.ingress[0].hostname'",
                                    returnStdout: true).trim()
                            ingressNLBHostedZoneID = sh(script: "aws --region \$AWS_REGION elbv2 describe-load-balancers --query 'LoadBalancers[?DNSName==`" + ingressNLBAddress + "`].CanonicalHostedZoneId' --output text",
                                    returnStdout: true).trim()

                            println "Generating record for DNS update"
                            def r53WildcardRecordJSON = """
                            {
                                "Comment": "Creating Alias resource record sets in Route 53",
                                "Changes": [{
                                    "Action": "DELETE",
                                    "ResourceRecordSet": {
                                        "Name": "${r53WildcardRecordName}",
                                        "Type": "A",
                                        "AliasTarget": {
                                            "HostedZoneId": "${ingressNLBHostedZoneID}",
                                            "DNSName": "${ingressNLBAddress}",
                                            "EvaluateTargetHealth": false
                                        }
                                    }
                                }]
                            }
                            """
                            writeFile file: 'jx_r53_alias.json', text: r53WildcardRecordJSON
                            sh "cat jx_r53_alias.json"

                            println "Creating/updating Route53 entry"
                            sh "aws route53 change-resource-record-sets --hosted-zone-id " + parameters.jxDomainHostedZoneID + " --change-batch file://jx_r53_alias.json"
                        }
                    }
                }
            }
        }
        stage('Remove jx') {
            steps {
                dir("$OPERATION_DIR") {
                    ansiColor('xterm') {
                        withProxyEnv() {
                            script {
                                sh 'jx uninstall -b --context `kubectl config current-context`'
                            }
                        }
                    }
                }
            }
        }
        stage('Remove k8s ingress') {
            steps {
                dir("$OPERATION_DIR") {
                    withProxyEnv() {
                        sh 'helm delete  jxing'
                    }
                }
            }
        }
    }
}